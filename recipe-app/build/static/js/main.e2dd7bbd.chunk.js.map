{"version":3,"sources":["context/search_context.js","react-components/Nav/index.js","config.js","actions/recipes.js","react-components/RecipeCard/index.js","react-components/ViewRecipe/index.js","mockRecipes.js","actions/announcement.js","react-components/UserAnnouncements/index.js","react-components/UserView/index.js","react-components/UserProfile/index.js","react-components/EditProfile/index.js","react-components/AnnouncePopUp/index.js","react-components/ModView/index.js","react-components/ModManage/recipeTable.js","react-components/ModManage/index.js","react-components/GuestView/index.js","react-components/LoginCard/index.js","react-components/EditProfile/EditName/index.js","react-components/EditProfile/EditEmail/index.js","react-components/AddRecipe/Step1.js","react-components/AddRecipe/Step2.js","react-components/AddRecipe/Step3.js","react-components/AddRecipe/Step4.js","actions/images.js","react-components/AddRecipe/Step5.js","react-components/AddRecipe/index.js","react-components/SavedRecipes/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchContext","React","createContext","query","searchHandler","SearchContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","setQuery","react_default","a","createElement","Provider","value","children","Search","styled","_ref","theme","defineProperty","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","&:hover","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","color","& .MuiInputBase-input","paddingLeft","concat","transition","transitions","create","Navbar","_React$useState","_React$useState2","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","pages","mod","settings","searchContext","useContext","react","AppBar","colour","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","xs","md","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","key","react_router_dom","className","to","textAlign","Button","my","Nav_Search","Search_default","placeholder","inputProps","onChange","e","target","Tooltip","title","p","Avatar","alt","src","mt","setting","process","env","api_host","API_HOST","ENV","addRecipe","recipe","url","recipeObj","dish_name","creator","creator_name","serving_size","reported","ingredients","ingredient","steps","cooking_steps","tips","saved_by","image_id","request","Request","method","body","JSON","stringify","headers","Accept","Content-Type","fetch","then","res","status","alert","catch","error","console","log","deleteRecipe","recipe_id","reportRecipe","RecipeCard","recipeProp","_id","date_created","curr_id","liked","setLiked","_useState3","_useState4","saved","_useState5","_useState6","image","setImage","useEffect","json","data","Card","state","isAdmin","isMod","CardActionArea","CardMedia","image_url","CardContent","gutterBottom","CardActions","Favorite_default","FavoriteBorder_default","Comment_default","Slideshow_default","style","user","Content-type","saveRecipe","Bookmark_default","BookmarkBorder_default","ReportGmailerrorred_default","ViewRecipe","useLocation","recipeData","setRecipeData","wantedServing","setWantedServing","_useState7","_useState8","servingSizeMulitiplier","setServingSizeMulitiplier","useParams","Nav","Input","justify","type","handleServingSize","amount","name","unit","mockRecipes","1","recipeId","userName","dateCreated","servingSize","pic","2","3","4","5","addAnnouncement","a_content","announcementObj","announcer","content","UserAnnouncements","announcements","setAnnouncements","trigger","Button_Button","announcement","useStyles","makeStyles","recipesContainer","paddingTop","paddingRight","UserView","navigate","useNavigate","classes","recipesData","setRecipesData","Grid","container","toLowerCase","includes","item","lg","Math","random","getRecipeCard","react_components_UserAnnouncements","announce","UserProfile","userInfo","setUserInfo","numRecipes","setNumRecipes","user_recipes","num_rec","i","length","curr_recipe","push","Grid_Grid","py","class","textDecoration","EditProfile","addNew","margin","fullWidth","Component","AnnouncePopUp","setContent","TextField","multiline","maxRows","label","ModView","uid","react_components_AnnouncePopUp","RecipeTable","selectionModel","setSelectionModel","rows","date","report","getRecipeInfo","DataGrid","initialState","sorting","sortModel","field","sort","columns","headerName","flex","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","ids","components","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","recipe_ids","handleDeleteRecipes","Delete_default","ModManage","recipeTable","GuestView","keys","Login","email","password","formValue","setFormValue","handleChange","_event$target","prevState","objectSpread","AppBar_AppBar","alignitems","Toolbar_Toolbar","wrap","Typography_Typography","direction","Paper","elevation","TextField_TextField","required","autoFocus","app","message","document","querySelector","innerText","setAttribute","setState","currentUser","currentEmail","login","register","EditName","newName","setNewName","edit","EditEmail","newEmail","setNewEmail","Step1","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","Form","Group","Label","Control","updateName","updateServingSize","ingredient_list","updateCurrentIngredient","updateCurrentAmount","updateCurrentUnit","esm_Button","addIngredient","index","esm_Card","Header","ListGroup","Item","deleteIngredient","Steps","updateStep","addStep","step","deleteStep","Step4","as","updateTips","printf","Step5","onFileChange","selectedFile","files","onFileUpload","FormData","append","fileData","lastModifiedDate","toDateString","onSubmit","preventDefault","form","updateImageId","imageData","addImage","UploadRecipe","returnIngredient","current_ingredient","current_amount","current_unit","img_id","current_ingrident","new_ingredient","filter","submitRecipe","creator_id","creator_email","current_step","need_add","new_steps","s","show","_this$props","curr_email","Step1_Step1","Step2_Step1","Step3_Steps","Step4_Step4","AddRecipe_Step5","header","alignSelf","SavedRecipes","nav_color","saved_recipes","App","_this$state","react_router","path","element","react_components_UserView","react_components_ModView","react_components_ModManage","react_components_GuestView","LoginCard","react_components_UserProfile","react_components_EditProfile","react_components_ViewRecipe","react_components_AddRecipe_UploadRecipe","EditProfile_EditName","EditProfile_EditEmail","react_components_SavedRecipes","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","search_context","src_App_0","getElementById"],"mappings":"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ACID,KAAM,QACND,OAAQ,IACRE,KAAM,QAEV,CACID,KAAM,YACND,OAAQ,IACRE,KAAM,QAEV,CACID,KAAM,QACND,OAAQ,EACRE,KAAM,QAGdlF,MAAO,CACH,+DACA,qGACA,uGACA,6FACA,4HACA,yIACA,sGACA,sDACA,qDAGR0F,EAAK,CACDL,SAAU,EACV5G,MAAO,cACP6G,SAAU,cACVC,YAAa,eACbC,YAAa,EACbC,IAAK,kBACL5F,SAAU,EACVC,YAAa,CACT,CACImF,KAAM,gCACND,OAAQ,EACRE,KAAM,QAEV,CACID,KAAM,iBACND,OAAQ,EACRE,KAAM,QAEV,CACID,KAAM,cACND,OAAQ,GACRE,KAAM,QAEV,CACID,KAAM,gBACND,OAAQ,EACRE,KAAM,QAEV,CACID,KAAM,eACND,OAAQ,EACRE,KAAM,OAEV,CACID,KAAM,QACND,OAAQ,IACRE,KAAM,QAEV,CACID,KAAM,YACND,OAAQ,IACRE,KAAM,QAEV,CACID,KAAM,QACND,OAAQ,EACRE,KAAM,QAGdlF,MAAO,CACH,sKACA,qIACA,8MACA,2FAGR2F,EAAK,CACDN,SAAU,EACV5G,MAAO,0BACP6G,SAAU,eACVC,YAAa,iBACbC,YAAa,EACbC,IAAK,qBACL5F,SAAU,GACVC,YAAa,CACT,CACImF,KAAM,cACND,OAAQ,EACRE,KAAM,UAEV,CACID,KAAM,SACND,OAAQ,EACRE,KAAM,QAEV,CACID,KAAM,iBACND,OAAQ,EACRE,KAAM,WAGdlF,MAAO,CACH,oFACA,6EACA,yFACA,sFACA,wEAGR4F,EAAK,CACDP,SAAU,EACV5G,MAAO,sBACP6G,SAAU,eACVC,YAAa,kBACbC,YAAa,EACbC,IAAK,oBACL5F,SAAU,IACVC,YAAa,CACT,CACImF,KAAM,gBACND,OAAQ,EACRE,KAAM,QAEV,CACID,KAAM,4BACND,OAAQ,EACRE,KAAM,UAEV,CACID,KAAM,eACND,OAAQ,EACRE,KAAM,WAGdlF,MAAO,CACH,8CACA,sEAGR6F,EAAK,CACDR,SAAU,EACV5G,MAAO,wBACP6G,SAAU,oBACVC,YAAa,mBACbC,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","file":"static/js/main.e2dd7bbd.chunk.js","sourcesContent":["// from https://dev.to/holdmypotion/using-react-context-api-like-a-pro-13k5\r\nimport React, { useState } from \"react\";\r\n\r\n// query is the state\r\n// SearchHandler is a function for changing the state.\r\nexport const SearchContext = React.createContext({\r\n  query: \"\",\r\n  searchHandler: () => {},\r\n});\r\n\r\n// Defining a simple HOC component\r\nconst SearchContextProvider = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const searchHandler = (query) => {\r\n    setQuery(query);\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{ query: query, searchHandler: searchHandler }}\r\n    >\r\n      {props.children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SearchContextProvider;","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useContext } from \"react\";\r\nimport { SearchContext } from \"../../context/search_context\";\r\n\r\nimport \"./styles.css\";\r\n\r\n//state for current user name\r\n\r\n//citation for most of the navbar implementation: https://mui.com/components/app-bar/\r\n//const pages = ['Home', 'Announcements', 'Add Recipe'];\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const pages = !props.mod ? (['Home', 'Announcements', 'Upload']) : (['Feed', 'Manage', 'Announce'])\r\n    const settings = !props.mod ? (['Profile', 'Saved']) : ([]);\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const searchContext = useContext(SearchContext);\r\n\r\n    const searchQueryHandler = (query) => {\r\n        //setSearchQuery(query)\r\n        searchContext.searchHandler(query);\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" color={`${props.colour}`}>\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n                    >\r\n                        RECIPIST\r\n                    </Typography>\r\n\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleOpenNavMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElNav}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={Boolean(anchorElNav)}\r\n                            onClose={handleCloseNavMenu}\r\n                            sx={{\r\n                                display: { xs: 'block', md: 'none' },\r\n                            }}\r\n                        >\r\n                            {pages.map((page) => (\r\n                                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                                    <Link className=\"nav-links\" to={`/${page}`}>\r\n                                        <Typography textAlign=\"center\">\r\n                                            {page}\r\n                                        </Typography>\r\n                                    </Link>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n                    >\r\n                        RECIPIST\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {pages.map((page) => (\r\n                            <Link className=\"nav-links\" to={`/${page}`}>\r\n                                <Button\r\n                                    key={page}\r\n                                    onClick={handleCloseNavMenu}\r\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\r\n                                >\r\n                                    {page}\r\n                                </Button>\r\n                            </Link>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    <Search>\r\n                        <SearchIconWrapper>\r\n                            <SearchIcon />\r\n                        </SearchIconWrapper>\r\n                        <StyledInputBase\r\n                            placeholder=\"Search…\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={(e) => searchQueryHandler(e.target.value)}\r\n                        />\r\n                    </Search>\r\n\r\n                    <Box sx={{ flexGrow: 0 }}>\r\n                        <Tooltip title=\"Open settings\">\r\n                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            sx={{ mt: '45px' }}\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorElUser}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={Boolean(anchorElUser)}\r\n                            onClose={handleCloseUserMenu}\r\n                        >\r\n                            {settings.map((setting) => (\r\n                                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                                    <Link className=\"nav-links\" to={`/${setting}`}>\r\n                                        <Typography textAlign=\"center\">{setting}</Typography>\r\n                                    </Link>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\nexport default Navbar;","/* React environment configuration (frontend only) */\r\n// Do not store any sensitive data/secret values/API keys here - it is available in the browser to anyone.\r\n\r\nconst prod = {\r\n    env: 'production',\r\n    api_host: '' // an empty string to signify a relative path. can also put a deployment URL.\r\n};\r\nconst dev = {\r\n    env: 'development',\r\n    api_host: 'http://localhost:5000', // web server localhost port\r\n    use_frontend_test_user: false, // for testing a logged in frontend only, without any actual logging in, set to true (note that the test user will have to be turned on in the backend if you want to make authenticated requests).\r\n    user: \"test@user.com\"\r\n};\r\n\r\n// export the appropriate environment\r\nexport default process.env.NODE_ENV === 'production' ? prod : dev;","// environment configutations\r\nimport ENV from './../config.js'\r\nconst API_HOST = ENV.api_host\r\n// console.log('Current environment:', ENV.env)\r\n\r\n//a function to send a POST request to add a recipe to the database\r\nexport const addRecipe = (recipe) => {\r\n\r\n    // the URL for the request\r\n    const url = `${API_HOST}/api/recipes`;\r\n\r\n    // The data we are going to send in our request\r\n    const recipeObj = {\r\n        dish_name: recipe.dish_name,\r\n        creator: recipe.creator,\r\n        creator_name: recipe.creator_name,\r\n        serving_size: recipe.serving_size,\r\n        reported: 0,\r\n        ingredients: recipe.ingredient,\r\n        steps: recipe.cooking_steps,\r\n        tips: recipe.tips,\r\n        saved_by: [],\r\n        image_id: recipe.image_id\r\n\r\n    }\r\n\r\n    // Create our request constructor with all the parameters we need\r\n    const request = new Request(url, {\r\n        method: \"post\",\r\n        body: JSON.stringify(recipeObj),\r\n        headers: {\r\n            Accept: \"application/json, text/plain, */*\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    // Send the request with fetch()\r\n    fetch(request)\r\n        .then(function (res) {\r\n            // Handle response we get from the API.\r\n            // Usually check the error codes to see what happened.\r\n            if (res.status === 200) {\r\n                alert(\"Success\")\r\n            } else {\r\n                alert(\"Error\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\n// A function to send a GET request to the web server,\r\n// and then loop through them and add a list element for each student\r\nexport const deleteRecipe = (recipe_id) => {\r\n    // the URL for the request\r\n    const url = `${API_HOST}/api/recipes/${recipe_id}`;\r\n\r\n    // const request = new Request(url, {\r\n    //     method: \"post\",\r\n    //     body: \"\",\r\n    //     headers: {\r\n    //         Accept: \"application/json, text/plain, */*\",\r\n    //         \"Content-Type\": \"application/json\"\r\n    //     }\r\n    // });\r\n\r\n    // Send the request with fetch()\r\n    fetch(url, {\r\n        method: 'DELETE',\r\n    })\r\n        .then(function (res) {\r\n            // Handle response we get from the API.\r\n            // Usually check the error codes to see what happened.\r\n            if (res.status === 200) {\r\n                // If student was added successfully, tell the user.\r\n                alert(\"Succesfully deleted this recipe!\")\r\n            } else {\r\n                // If server couldn't add the student, tell the user.\r\n                // Here we are adding a generic message, but you could be more specific in your app.\r\n                alert(\"An error occurred while deleting this recipe!\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const reportRecipe = (recipe_id) => {\r\n    // the URL for the request\r\n    const url = `${API_HOST}/api/recipes/report/${recipe_id}`;\r\n\r\n    const request = new Request(url, {\r\n        method: \"post\",\r\n        body: \"\",\r\n        headers: {\r\n            Accept: \"application/json, text/plain, */*\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    // Send the request with fetch()\r\n    fetch(request)\r\n        .then(function (res) {\r\n            // Handle response we get from the API.\r\n            // Usually check the error codes to see what happened.\r\n            if (res.status === 200) {\r\n                // If student was added successfully, tell the user.\r\n                alert(\"Succesfully reported this recipe!\")\r\n            } else {\r\n                // If server couldn't add the student, tell the user.\r\n                // Here we are adding a generic message, but you could be more specific in your app.\r\n                alert(\"An error occurred while reporting this recipe!\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea, CardActions } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport SlideshowIcon from '@mui/icons-material/Slideshow';\r\nimport ReportGmailerrorredIcon from '@mui/icons-material/ReportGmailerrorred';\r\nimport { reportRecipe } from '../../actions/recipes';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./styles.css\";\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nexport default function RecipeCard(props) {\r\n    const recipe = props.recipeProp;\r\n    const { _id, image_id, dish_name, creator_name, date_created } = recipe;\r\n    // console.log(_id)\r\n\r\n    const curr_id = props.curr_id\r\n\r\n    const [liked, setLiked] = useState(false);\r\n    const [saved, setSaved] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    // console.log(image_id)\r\n    // console.log(image)\r\n\r\n    const saveRecipe = () => {\r\n        console.log(curr_id)\r\n\r\n        const id = props.curr_id\r\n\r\n        const url = `${API_HOST}/api/recipes/${_id}/savedby`\r\n\r\n        let data = {\r\n            user: id\r\n        }\r\n\r\n        // create request constructor\r\n        const request = new Request(url, {\r\n            method: 'put',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\":\"application/json; charset=UTF-8\",\r\n            }\r\n        });\r\n\r\n        // send the request with fetch\r\n        fetch(request)\r\n        .then(res => {\r\n            if (res.status === 200){\r\n                alert(\"Recipe saved!\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            alert(\"Error saving recipe!\")\r\n        }) \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_HOST}/images/${image_id}`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    // alert(\"Could not get image\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                // the resolved promise with the JSON body\r\n                setImage(data.image);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n    if(image){\r\n        // console.log(image.image_url)\r\n    }\r\n    \r\n\r\n    return (\r\n            <Card sx={{ maxWidth: 500 }}>\r\n                \r\n                <Link className=\"card-links\" to={`/recipe/${_id}`} state= {{ _id:_id, \r\n        image_id: image_id,\r\n         dish_name: dish_name,\r\n          creator_name: creator_name,\r\n           date_created:date_created,\r\n           isAdmin: props.isMod }}\r\n>\r\n                    <CardActionArea>\r\n                        {image && <CardMedia\r\n                            component=\"img\" \r\n                            height=\"140\"\r\n                            image={image.image_url}\r\n                            alt=\"Image not available\"\r\n                        />}\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                {`${dish_name}`}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                {`${creator_name}`}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle\" color=\"text.secondary\">\r\n                                {`${date_created}`}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Link>\r\n            <CardActions>\r\n                <IconButton aria-label=\"add to favorites\" onClick={() => setLiked(!liked)}>\r\n                    {liked ?\r\n                        (<FavoriteIcon></FavoriteIcon>) : (<FavoriteBorderIcon></FavoriteBorderIcon>)\r\n                    }\r\n                </IconButton>\r\n                <IconButton aria-label=\"add a comment\">\r\n                    <CommentIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"add a comment\">\r\n                    <SlideshowIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"add a comment\" style={{ marginLeft: \"auto\" }} onClick={() => saveRecipe()}>\r\n                    {saved ?\r\n                        (<BookmarkIcon></BookmarkIcon>) : (<BookmarkBorderIcon></BookmarkBorderIcon>)\r\n                    }\r\n                </IconButton>\r\n                <IconButton aria-label=\"add a comment\" onClick={() => reportRecipe(_id)}>\r\n                    <ReportGmailerrorredIcon />\r\n                </IconButton>\r\n\r\n            </CardActions>\r\n        </Card >\r\n    );\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n// import { uid } from \"react-uid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport Navbar from \"./../Nav\";\r\nimport RecipeCard from \"./../RecipeCard\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nimport \"./styles.css\";\r\nimport ENV from \"../../config.js\";\r\nimport { Card, CardActionArea, CardMedia, Input } from \"@mui/material\";\r\nconst API_HOST = ENV.api_host;\r\n\r\nconst ViewRecipe = () => {\r\n  const location = useLocation()\r\n  const { isAdmin } = location.state\r\n  const [recipeData, setRecipeData] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [wantedServing, setWantedServing] = useState(\"\")\r\n  const [servingSizeMulitiplier, setServingSizeMulitiplier] = useState(1)\r\n  const recipe_id = useParams();\r\n  //const servingSizeMulitiplier = 1;// useState(null);\r\n  //const servingSizeTotal = null;\r\n  console.log(recipe_id);\r\n\r\n  const handleServingSize = (e) => {\r\n    setWantedServing(e.target.value)\r\n    setServingSizeMulitiplier(e.target.value / recipeData.serving_size)\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(`${API_HOST}/api/recipes/${recipe_id.id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          // return a promise that resolves with the JSON body\r\n          return res.json();\r\n        } else {\r\n          alert(\"Could not get recipes\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        // the resolved promise with the JSON body\r\n        setRecipeData(data);\r\n        setWantedServing(data.serving_size);\r\n        //console.log(data.image_id);\r\n        fetch(`${API_HOST}/images/${data.image_id}`)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                // return a promise that resolves with the JSON body\r\n                return res.json();\r\n            } else {\r\n                alert(\"Could not get image\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            // the resolved promise with the JSON body\r\n            setImage(data.image);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n\r\n\r\n//   useEffect(() => {\r\n//     fetch(`${API_HOST}/images/${recipeData.image_id}`)\r\n//         .then(res => {\r\n//             if (res.status === 200) {\r\n//                 // return a promise that resolves with the JSON body\r\n//                 return res.json();\r\n//             } else {\r\n//                 alert(\"Could not get image\");\r\n//             }\r\n//         })\r\n//         .then(data => {\r\n//             // the resolved promise with the JSON body\r\n//             setImage(data.image);\r\n//         })\r\n//         .catch(error => {\r\n//             console.log(error);\r\n//         });\r\n// }, [])\r\n\r\n  console.log(recipeData);\r\n  console.log(image);\r\n  console.log(wantedServing)\r\n  console.log(servingSizeMulitiplier)\r\n\r\n  return (\r\n    <div>\r\n      <Navbar mod={isAdmin} colour={isAdmin? \"secondary\" : \"primary\"} />\r\n      {/* {recipeData && <RecipeCard key={Math.random()} recipeProp={recipeData}></RecipeCard>} */}\r\n\r\n      {recipeData && (\r\n        <div\r\n          //  fontSize={500}\r\n\r\n          className=\"Title\"\r\n          //\r\n        >\r\n          {recipeData.dish_name}\r\n        </div>\r\n      )}\r\n      <div className=\"createdBy\" component=\"div\">\r\n        Created by:{\" \"}\r\n        {recipeData && (\r\n          <div className=\"amd\" component=\"div\">\r\n            {recipeData.creator_name}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"createdOn\">\r\n        Created on:{\" \"}\r\n        {recipeData && <div className=\"amd\">{recipeData.date_created}</div>}\r\n      </div>\r\n      <div>\r\n        <div className=\"Servingsize\">\r\n          Set Serving Size:\r\n          <Input\r\n            justify\r\n            type=\"number\"\r\n            className=\"Servingsizeinsert\"\r\n            value={wantedServing}\r\n            onChange={(e) => handleServingSize(e)}\r\n            \r\n            \r\n            placeholder=\"        Insert Here\"\r\n          ></Input>\r\n        </div>\r\n        <div>\r\n          \r\n          <Card className=\"card\" sx={{ maxWidth: 800 }}>\r\n            <CardActionArea>\r\n                            \r\n            {recipeData && image &&(<CardMedia component=\"img\"\r\n                            height=\"400\" image={image.image_url} alt=\"Image not available\" >\r\n                  {/* <img src=\"https://meowlivia.s3.us-east-2.amazonaws.com/codepen/Waitress/GettingOutOfMudPie.png\" /> */}\r\n                  {/* {recipeData.image_id} */}\r\n                </CardMedia>)}\r\n\r\n            </CardActionArea>\r\n          </Card>\r\n          {recipeData && (\r\n            <span className=\"ingredients\">\r\n              Ingredients\r\n              {recipeData.ingredients.map((ingredients) => (\r\n                <div className=\"ingredients-list\">\r\n                  {/* {recipeData.serving_size*servingSizeMulitiplier} */}\r\n                   {ingredients.serving_size} \r\n                  {ingredients.amount * servingSizeMulitiplier}\r\n                  <span className=\"ingredients-list-name\">\r\n                    {ingredients.name} {ingredients.unit}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* {recipeData && <div  component=\"div\">{recipeData.serving_size}</div>}  */}\r\n      {/* {recipeData && <h3>{recipeData}</h3>} */}\r\n\r\n      {/* Double Check that the Image ID is active */}\r\n\r\n      {/* Need to break down the steps here */}\r\n      <div className=\"instruction-title\">\r\n        Instructions\r\n        {recipeData && <div></div>}\r\n      </div>\r\n\r\n      {recipeData && (\r\n        <div>\r\n          {recipeData.steps.map((steps) => (\r\n            <div className=\"instructions\">{steps}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewRecipe;\r\n","const mockRecipes = {\r\n    \"1\": {\r\n        recipeId: 1,\r\n        title: \"Perfect Chicken Teriyaki\",\r\n        userName: \"Ryosuke Champ\",\r\n        dateCreated: \"May 21, 2021\",\r\n        servingSize: 1,\r\n        pic: \"chicken_teriyaki.png\",\r\n        reported: 0,\r\n        ingredients: [\r\n            {\r\n                name: \"Large Chicken Thigh (skin on)\",\r\n                amount: 1,\r\n                unit: \"unit\"\r\n            },\r\n            {\r\n                name: \"Potato Starch \",\r\n                amount: 1,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Green Onion\",\r\n                amount: 0.5,\r\n                unit: \"unit\"\r\n            },\r\n            {\r\n                name: \"Cooking Sake \",\r\n                amount: 1,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Brown Sugar \",\r\n                amount: 2,\r\n                unit: \"tsp\"\r\n            },\r\n            {\r\n                name: \"Water\",\r\n                amount: 1.5,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Soy sauce\",\r\n                amount: 1.5,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Honey\",\r\n                amount: 2,\r\n                unit: \"tsp\"\r\n            }\r\n        ],\r\n        steps: [\r\n            \"Cut off any fatty parts of one large chicken thigh (skin on)\",\r\n            \"Cover the chicken thigh in potato (or corn) starch on both sides and sprinkle with salt and pepper\",\r\n            \"Make your sauce by mixing your cooking sake, brown sugar, water, soy sauce and honey and mixing them\",\r\n            \"Heat some olive oil in a frying pan on a medium heat and put the chicken in skin side down\",\r\n            \"Add your green onions and cook the chicken until the skin is golden brown and crispy (be careful not to burn the onions!)\",\r\n            \"Turn the chicken over, set aside the green onions and continue to cook the chicken on a low heat with the lid on - for about 3 minutes\",\r\n            \"Take the chicken out of the pan - wipe away the excess fat and then put them back in with the sauce\",\r\n            \"Let that simmer with the lid on for about 5 minutes\",\r\n            \"Cover the chicken in sauce and you’re done!\"\r\n        ]\r\n    },\r\n    \"2\": {\r\n        recipeId: 2,\r\n        title: \"Bison Chili\",\r\n        userName: \"Kevin Curry\",\r\n        dateCreated: \"May 16, 2019\",\r\n        servingSize: 5,\r\n        pic: \"bison_chili.jpg\",\r\n        reported: 0,\r\n        ingredients: [\r\n            {\r\n                name: \"Large Chicken Thigh (skin on)\",\r\n                amount: 1,\r\n                unit: \"unit\"\r\n            },\r\n            {\r\n                name: \"Potato Starch \",\r\n                amount: 1,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Green Onion\",\r\n                amount: 0.5,\r\n                unit: \"unit\"\r\n            },\r\n            {\r\n                name: \"Cooking Sake \",\r\n                amount: 1,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Brown Sugar \",\r\n                amount: 2,\r\n                unit: \"tsp\"\r\n            },\r\n            {\r\n                name: \"Water\",\r\n                amount: 1.5,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Soy sauce\",\r\n                amount: 1.5,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"Honey\",\r\n                amount: 2,\r\n                unit: \"tsp\"\r\n            }\r\n        ],\r\n        steps: [\r\n            \"Set a nonstick skillet on medium heat.  Once hot, toss in oil, garlic, onion and bell pepper.  Cook until the onions are softer and brown and slightly translucent.\",\r\n            \"Add the meat to the skillet and chop it up as it cooks.  As the meat continues to cook, add the seasonings.  And continue cooking.\",\r\n            \"Pour in beef stock and tomato paste and fold everything together.  Reduce the heat to a light simmer, then cover and cook for at least 25 minutes, then allow it to slightly cool off the heat  to thicken.\",\r\n            \"Garnish and enjoy with your choice of rice, sweet potato, cauliflower mash or plantain\"\r\n        ]\r\n    },\r\n    \"3\": {\r\n        recipeId: 3,\r\n        title: \"Grilled Cheese Sandwich\",\r\n        userName: \"Sally Peppar\",\r\n        dateCreated: \"April 20, 2021\",\r\n        servingSize: 2,\r\n        pic: \"grilled_cheese.jpg\",\r\n        reported: 21,\r\n        ingredients: [\r\n            {\r\n                name: \"white bread\",\r\n                amount: 4,\r\n                unit: \"slices\"\r\n            },\r\n            {\r\n                name: \"butter\",\r\n                amount: 3,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"cheddar cheese\",\r\n                amount: 2,\r\n                unit: \"slices\"\r\n            }\r\n        ],\r\n        steps: [\r\n            \"Preheat skillet over medium heat. Generously butter one side of a slice of bread.\",\r\n            \"Place bread butter-side-down onto skillet bottom and add 1 slice of cheese\",\r\n            \"Butter a second slice of bread on one side and place butter-side-up on top of sandwich\",\r\n            \"Grill until lightly browned and flip over; continue grilling until cheese is melted\",\r\n            \"Repeat with remaining 2 slices of bread, butter and slice of cheese\"\r\n        ]\r\n    },\r\n    \"4\": {\r\n        recipeId: 4,\r\n        title: \"PB & Bacon Sandwich\",\r\n        userName: \"Gerard Seint\",\r\n        dateCreated: \"January 2, 2021\",\r\n        servingSize: 1,\r\n        pic: \"pbb_sandwich.jpeg\",\r\n        reported: 309,\r\n        ingredients: [\r\n            {\r\n                name: \"peanut butter\",\r\n                amount: 1,\r\n                unit: \"tbsp\"\r\n            },\r\n            {\r\n                name: \"toasted whole wheat bread\",\r\n                amount: 2,\r\n                unit: \"slices\"\r\n            },\r\n            {\r\n                name: \"crispy bacon\",\r\n                amount: 2,\r\n                unit: \"slices\"\r\n            }\r\n        ],\r\n        steps: [\r\n            \"Spread peanut butter on one slice of toast.\",\r\n            \"Top peanut butter with sliced bacon and remaining piece of toast.\"\r\n        ]\r\n    },\r\n    \"5\": {\r\n        recipeId: 5,\r\n        title: \"Perfect Basic Oatmeal\",\r\n        userName: \"Elizabeth Laseter\",\r\n        dateCreated: \"January 25, 2018\",\r\n        servingSize: 2,\r\n        pic: \"oatmeal.jpg\",\r\n        reported: 2,\r\n        ingredients: [\r\n            {\r\n                name: \"old-fashioned rolled oats\",\r\n                amount: 1,\r\n                unit: \"cup\"\r\n            },\r\n            {\r\n                name: \"milk\",\r\n                amount: 1,\r\n                unit: \"cup\"\r\n            },\r\n            {\r\n                name: \"water\",\r\n                amount: 1,\r\n                unit: \"cup\"\r\n            },\r\n            {\r\n                name: \"kosher salt\",\r\n                amount: 0.125,\r\n                unit: \"tsp\"\r\n            },\r\n            {\r\n                name: \"ground cinnamon\",\r\n                amount: 0.5,\r\n                unit: \"tsp\"\r\n            },\r\n            {\r\n                name: \"honey\",\r\n                amount: 1,\r\n                unit: \"tsp\"\r\n            },\r\n            \r\n        ],\r\n        steps: [\r\n            \"Combine oats, milk, water, salt, and cinnamon in a medium saucepan. Bring to a boil, then reduce heat to low.\",\r\n            \"Simmer uncovered for 3 to 5 minutes until thickened, stirring occasionally. Remove from heat and let cool slightly.\",\r\n            \"Divide equally between two bowls. Drizzle each serving with 1/2 teaspoon honey. Add additional desired toppings and serve (e.g. bananas, blueberries, etc.)\"\r\n        ]\r\n    }\r\n};\r\n\r\nexport default mockRecipes;","// environment configutations\r\nimport ENV from './../config.js'\r\nconst API_HOST = ENV.api_host\r\n// console.log('Current environment:', ENV.env)\r\n\r\n// A function to update the student form state\r\nexport const addAnnouncement = (a_content) => {\r\n\r\n    // the URL for the request\r\n    console.log(a_content)\r\n    const url = `${API_HOST}/api/announcements`;\r\n\r\n    // The data we are going to send in our request\r\n    const announcementObj = {\r\n        announcer: \"Mod\",\r\n        content: a_content\r\n    }\r\n\r\n    // Create our request constructor with all the parameters we need\r\n    const request = new Request(url, {\r\n        method: \"post\",\r\n        body: JSON.stringify(announcementObj),\r\n        headers: {\r\n            Accept: \"application/json, text/plain, */*\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    // Send the request with fetch()\r\n    fetch(request)\r\n        .then(function (res) {\r\n            // Handle response we get from the API.\r\n            // Usually check the error codes to see what happened.\r\n            if (res.status === 200) {\r\n                alert(\"Success\")\r\n            } else {\r\n                alert(\"Error\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from '@mui/material/TextField';\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { getAnnouncements } from '../../actions/announcement';\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nfunction UserAnnouncements(props) {\r\n    // const [announcements, setAnnouncements] = useState([]);\r\n    // setAnnouncements(getAnnouncements())\r\n    const [announcements, setAnnouncements] = useState([]);\r\n\r\n    // const getAnnouncements = () => {\r\n    //     // the URL for the request\r\n    //     const url = `${API_HOST}/api/announcements`;\r\n    \r\n    //     // Since this is a GET request, simply call fetch on the URL\r\n    //     fetch(url)\r\n    //         .then(res => {\r\n    //             if (res.status === 200) {\r\n    //                 // return a promise that resolves with the JSON body\r\n    //                 return res.json();\r\n    //             } else {\r\n    //                 alert(\"Could not get announcements\");\r\n    //             }\r\n    //         })\r\n    //         .then(json => {\r\n    //             // the resolved promise with the JSON body\r\n    //             setAnnouncements(json);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //         });\r\n    // };\r\n    \r\n    useEffect(() => {\r\n        fetch(`${API_HOST}/api/announcements`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get announcements\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                // the resolved promise with the JSON body\r\n                setAnnouncements(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n    \r\n    return (props.trigger) ? (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\">\r\n                <Link className=\"nav-links\" to={`/Home`}>\r\n                    <Button variant=\"contained\" color=\"error\" className=\"close-btn\">\r\n                        Close\r\n                    </Button>\r\n                </Link>\r\n\r\n\r\n                {announcements.map(announcement => (\r\n                    <h3> {announcement.announcer}: {announcement.content}</h3>\r\n                ))}\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    ) : \"\"\r\n}\r\n\r\n\r\n\r\nexport default UserAnnouncements","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './styles.css';\r\nimport mockRecipes from './../../mockRecipes'\r\n// import { uid } from \"react-uid\";\r\n\r\nimport Navbar from './../Nav';\r\nimport RecipeCard from './../RecipeCard';\r\nimport UserAnnouncements from '../UserAnnouncements';\r\n\r\nimport { SearchContext } from \"../../context/search_context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    }\r\n})\r\n\r\nconst UserView = (props) => {\r\n    const navigate = useNavigate()\r\n    const classes = useStyles();\r\n    const [recipesData, setRecipesData] = useState([])\r\n\r\n    const searchContext = useContext(SearchContext);\r\n\r\n    const curr_id = props.curr_id\r\n\r\n    useEffect(() => {\r\n        // check if logged in\r\n        fetch(`${API_HOST}/api/session`)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                // user in session\r\n                console.log(res.json())\r\n            } else {\r\n                // console.log(res.json())\r\n                navigate(\"/Home\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n\r\n        fetch(`${API_HOST}/api/recipes`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get recipes\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                // the resolved promise with the JSON body\r\n                // console.log(data)\r\n                setRecipesData(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    const getRecipeCard = (recipe) => {\r\n        // console.log(recipe)\r\n        return (\r\n            <Grid item md={4} lg={3} key={recipe.id}>\r\n                <RecipeCard key={Math.random()} isMod={false} recipeProp={recipe} curr_id={curr_id}></RecipeCard>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar mod={false} colour={\"primary\"}/>\r\n            <Grid container spacing={4} className={classes.recipesContainer}>\r\n                {recipesData.map((recipe) => recipe.dish_name.toLowerCase().includes(searchContext.query) && getRecipeCard(recipe))}\r\n            </Grid>\r\n            <UserAnnouncements trigger={props.announce}></UserAnnouncements>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserView;","import React, { useState, useEffect } from 'react';\r\nimport \"./styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./../Nav\";\r\nimport RecipeCard from \"./../RecipeCard\";\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    }\r\n})\r\n\r\nconst UserProfile = (props) => {\r\n    const classes = useStyles()\r\n    const [userInfo, setUserInfo] = useState([])\r\n    const [recipesData, setRecipesData] = useState([])\r\n    const [numRecipes, setNumRecipes] = useState(\"\")\r\n    // const numRecipes = \"cHaN!ge\"\r\n\r\n    // CHANGE THIS TO CHECK IF WE ARE LOGGED IN TO SAME USER AS THIS PROFILE\r\n    const curr_user = true;\r\n\r\n    // CHANGE THIS: TO GET USER ID FROM LOGGED IN INFO\r\n    // const id = '624b3e2e045954b63f4bc861'\r\n    const id = props.curr_id\r\n    \r\n    useEffect(() => {\r\n        // console.log(props.curr_id)\r\n        // get user's name\r\n        fetch(`${API_HOST}/api/users/${id}`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get recipes\")\r\n                }\r\n            })\r\n            .then(data => {\r\n                setUserInfo(data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n        // get the user's recipes\r\n        fetch(`${API_HOST}/api/recipes`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get recipes\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                // get recipes of this user\r\n                const user_recipes = []\r\n                let num_rec = 0\r\n                for (let i = 0; i < data.length; i++){\r\n                    // console.log(data[i])\r\n                    let curr_recipe = data[i]\r\n\r\n                    if (curr_recipe.creator === id){\r\n                        user_recipes.push(curr_recipe)\r\n                        num_rec = num_rec + 1\r\n                    }\r\n                }\r\n                console.log(user_recipes)\r\n                \r\n                setRecipesData(user_recipes)\r\n                setNumRecipes(num_rec)\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        \r\n        \r\n    }, [])\r\n\r\n    const getRecipeCard = (recipe) => {\r\n        console.log(recipe)\r\n        return (\r\n            <Grid item md={6} lg={6} key={recipe.id}>\r\n                <RecipeCard key={Math.random()} recipeProp={recipe}></RecipeCard>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar mod={false} colour={\"primary\"} />\r\n\r\n        {curr_user ? (\r\n          <div>\r\n            <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n              <div id=\"bio\">\r\n                <div class=\"profilePicContainer\">\r\n                  <img src=\"/images/gordon.jpg\" id=\"profilePicture\" />\r\n                </div>\r\n                <div class=\"userInfo\">\r\n                  <p>{userInfo.name}</p>\r\n                  {/* <p class=\"handle\">@{this.state.username} </p> */}\r\n                  <p>Recipes: {numRecipes} </p>\r\n                  <Link to=\"/EditProfile\" style={{ textDecoration: \"none\" }}>\r\n                    <Button variant=\"outlined\">Edit Profile</Button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n            <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n              <Grid container spacing={4} className ={classes.recipesContainer}>\r\n                  {recipesData.map((recipe) => getRecipeCard(recipe))}\r\n              </Grid>\r\n            </Container>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n              <div id=\"bio\">\r\n                <div class=\"profilePicContainer\">\r\n                  <img src=\"/images/gordon.jpg\" id=\"profilePicture\" />\r\n                </div>\r\n                <div class=\"userInfo\">\r\n                  <p>{userInfo.name}</p>\r\n                  <p>Recipes: {numRecipes} </p>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n            <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n              <Grid container spacing={4} className ={classes.recipesContainer}>\r\n                  {recipesData.map((recipe) => getRecipeCard(recipe))}\r\n              </Grid>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent} from '@mui/material';\r\n\r\nimport Navbar from \"./../Nav\";\r\n\r\n\r\n// citation for the MUI layout of the edit page: https://www.youtube.com/watch?v=Lv3OhfcxjkA&list=LL&index=1&t=542s\r\n\r\nclass EditProfile extends React.Component {\r\n  // get current name/username from database (IMPLEMENT PHASE 2)\r\n  //\r\n  //     currName: \"Gordon Ramsay\",\r\n  //     currUsername: \"RealGordonRamsay\",\r\n  //\r\n\r\n  // just need to change database and we just render name from db, no need to change it in app itself\r\n//   state = {\r\n//     newName: \"\",\r\n//     newUsername: \"\",\r\n//   };\r\n\r\n//   handleInputChange = (event) => {\r\n//     const target = event.target;\r\n//     const value = target.value;\r\n//     const name = target.name;\r\n\r\n//     this.setState({\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n  addNew = () => {\r\n    // IMPLEMENT PHASE 2:\r\n    // get current name + username from db\r\n\r\n    // check that username is valid (not blank, longer than __ characters, only letters and underscores)\r\n    // check if user exists\r\n\r\n    // currName = this.state.newName\r\n    // currUsername = this.state.\r\n\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Navbar mod={false} colour={\"primary\"} />\r\n            </div>\r\n            <Card style={{ maxWidth: 450, margin: \"0 auto\", padding: \"20px 5px\" }}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        Edit Profile\r\n                    </Typography>\r\n                    <Grid container spacing={1}>\r\n                        <Grid xs={12} item>\r\n                            <Link to=\"/EditName\" style={{ textDecoration: 'none' }}>\r\n                                <Button \r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                >\r\n                                Edit name\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid xs={12} item>\r\n                            <Link to=\"/EditEmail\" style={{ textDecoration: 'none' }}>\r\n                                <Button \r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                >\r\n                                Edit email\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n\r\n    //   <Card style={{ maxWidth: 450, margin: \"0 auto\", padding: \"20px 5px\" }}>\r\n    //     <CardContent>\r\n    //       <Typography gutterBottom variant=\"h5\">\r\n    //         Edit Profile\r\n    //       </Typography>\r\n    //       <form>\r\n    //         <Grid container spacing={1}>\r\n    //           <Grid xs={12} item>\r\n    //             <TextField\r\n    //               required\r\n    //               label=\"Name\"\r\n    //               variant=\"outlined\"\r\n    //               fullWidth\r\n    //               name=\"newName\"\r\n    //               value={this.state.newName}\r\n    //               onChange={this.handleInputChange}\r\n    //             ></TextField>\r\n    //           </Grid>\r\n    //           <Grid xs={12} item>\r\n    //             <TextField\r\n    //               required\r\n    //               label=\"Username\"\r\n    //               variant=\"outlined\"\r\n    //               fullWidth\r\n    //               name=\"newUsername\"\r\n    //               value={this.state.newUsername}\r\n    //               onChange={this.handleInputChange}\r\n    //             ></TextField>\r\n    //           </Grid>\r\n    //           <Grid xs={12} item>\r\n    //             <Button\r\n    //               variant=\"contained\"\r\n    //               color=\"primary\"\r\n    //               fullWidth\r\n    //               onClick={() => this.addNew()}\r\n    //             >\r\n    //               Submit\r\n    //             </Button>\r\n    //           </Grid>\r\n    //         </Grid>\r\n    //       </form>\r\n    //     </CardContent>\r\n    //   </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;","import React, { useState } from 'react'\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from '@mui/material/TextField';\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { addAnnouncement } from '../../actions/announcement';\r\n\r\n\r\nfunction AnnouncePopUp(props) {\r\n    const [content, setContent] = useState('');\r\n\r\n    return (props.trigger) ? (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\"> \r\n                <Link className=\"nav-links\" to={`/Feed`}>\r\n                    <Button variant=\"contained\" color=\"error\" className=\"close-btn\">\r\n                        Close\r\n                    </Button>\r\n                </Link>\r\n\r\n                <h3>Make an announcement!</h3>\r\n                <TextField multiline maxRows={3} fullWidth=\"true\" id=\"filled-basic\" label=\"Announce\" variant=\"filled\" \r\n                onChange={(e) => setContent(e.target.value)}/>\r\n                <Button onClick={() => addAnnouncement(content)} variant=\"text\" color=\"primary\" className=\"announce-btn\">Submit</Button>\r\n            </div>\r\n        </div>\r\n    ) : \"\"\r\n}\r\n\r\nexport default AnnouncePopUp","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport mockRecipes from './../../mockRecipes'\r\nimport { uid } from \"react-uid\";\r\n\r\nimport Navbar from './../Nav';\r\nimport RecipeCard from './../RecipeCard';\r\nimport AnnouncePopUp from '../AnnouncePopUp';\r\n\r\nimport { SearchContext } from \"../../context/search_context\";\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    }\r\n})\r\n\r\nconst ModView = (props) => {\r\n    const classes = useStyles();\r\n    const [recipesData, setRecipesData] = useState([])\r\n\r\n    const searchContext = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_HOST}/api/recipes`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get recipes\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                // the resolved promise with the JSON body\r\n                setRecipesData(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    const getRecipeCard = (recipe) => {\r\n        //console.log(recipe)\r\n        return (\r\n            <Grid item md={4} lg={3} key={recipe.id}>\r\n                <RecipeCard key={uid(recipe)} isMod={true} recipeProp={recipe}></RecipeCard>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar mod={true} colour={\"secondary\"}/>\r\n            <Grid container spacing={4} className={classes.recipesContainer}>\r\n                {recipesData.map((recipe) => recipe.dish_name.toLowerCase().includes(searchContext.query) && getRecipeCard(recipe))\r\n                }\r\n            </Grid>\r\n            <AnnouncePopUp trigger={props.announce}></AnnouncePopUp>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModView;","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarDensitySelector } from '@mui/x-data-grid';\r\nimport { IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport ENV from '../../config.js'\r\nimport { deleteRecipe } from '../../actions/recipes.js';\r\nconst API_HOST = ENV.api_host\r\n\r\nfunction handleDeleteRecipes(recipe_ids) {\r\n    for (let i = 0; i < recipe_ids.length; i++) {\r\n        deleteRecipe(recipe_ids[i]);\r\n    }\r\n}\r\n\r\n\r\nconst RecipeTable = () => {\r\n    const [selectionModel, setSelectionModel] = useState([]);\r\n    const [recipesData, setRecipesData] = useState([]);\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarColumnsButton />\r\n                <GridToolbarFilterButton />\r\n                <GridToolbarDensitySelector />\r\n                <IconButton\r\n                    onClick={() => handleDeleteRecipes(selectionModel)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </GridToolbarContainer>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_HOST}/api/recipes`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // return a promise that resolves with the JSON body\r\n                    return res.json();\r\n                } else {\r\n                    alert(\"Could not get recipes\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                // the resolved promise with the JSON body\r\n                setRecipesData(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'Recipe ID', width: 130, flex: 1 },\r\n        { field: 'title', headerName: 'Title', width: 300, flex: 1 },\r\n        { field: 'creator', headerName: 'Creator', width: 200, flex: 1 },\r\n        { field: 'date', headerName: 'Date Created', width: 150, flex: 1 },\r\n        { field: 'report', headerName: '# of Reports', width: 150, flex: 1 }\r\n    ];\r\n\r\n    const getRecipeInfo = (recipe) => {\r\n        const { _id, dish_name, creator_name, date_created, reported } = recipe;\r\n        const info = {\r\n            id: _id, title: `${dish_name}`, creator: `${creator_name}`, date: `${date_created}`, report: reported\r\n        }\r\n        return info;\r\n    }\r\n\r\n    const rows = recipesData.map((recipe) => getRecipeInfo(recipe))\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ height: 700, width: '100%' }}>\r\n            <div style={{ display: 'flex', height: '100%' }}>\r\n                <DataGrid\r\n                    initialState={{\r\n                        sorting: {\r\n                            sortModel: [{ field: 'report', sort: 'desc' }],\r\n                        },\r\n                    }}\r\n                    sx={{ backgroundColor: 'white' }}\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={25}\r\n                    rowsPerPageOptions={[25]}\r\n                    checkboxSelection\r\n                    onSelectionModelChange={(ids) => {\r\n                        setSelectionModel(ids);\r\n                    }}\r\n                    components={{\r\n                        Toolbar: CustomToolbar,\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeTable;","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport mockRecipes from './../../mockRecipes'\r\n\r\nimport Navbar from './../Nav';\r\nimport RecipeCard from './../RecipeCard';\r\nimport RecipeTable from './recipeTable';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    }\r\n})\r\n\r\nconst ModManage = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Navbar mod={true} colour={\"secondary\"}/>\r\n            <Grid container spacing={4} className={classes.recipesContainer}>\r\n                <RecipeTable></RecipeTable>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModManage;","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './styles.css';\r\nimport mockRecipes from './../../mockRecipes'\r\n\r\nimport Navbar from './../Nav';\r\nimport RecipeCard from './../RecipeCard';\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    }\r\n})\r\n\r\nconst GuestView = () => {\r\n    const classes = useStyles();\r\n    const [recipesData, setRecipesData] = useState(mockRecipes)\r\n\r\n    const getRecipeCard = (recipeId) => {\r\n        console.log(recipesData[`${recipeId}`])\r\n        return (\r\n            <Grid item md={4} lg={3} key={recipeId}>\r\n                <RecipeCard recipeProp={recipesData[`${recipeId}`]}></RecipeCard>\r\n            </Grid>\r\n        )\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <Navbar mod={false} colour={\"primary\"}/>\r\n            <Grid container spacing={4} className={classes.recipesContainer}>\r\n                {Object.keys(recipesData).map((recipeId) => getRecipeCard(recipeId))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GuestView;","import {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { Component, useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./styles.css\";\r\nimport mockRecipes from \"./../../mockRecipes\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navbar from \"./../Nav\";\r\nimport RecipeCard from \"./../RecipeCard\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport UserView from \"../UserView\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n// import withHook from \"./highorder\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//import { login } from \"../../actions/user\";\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst Login = (props) => {\r\n    const navigate = useNavigate()\r\n    // source for the log in useState and handleChange function: https://sebhastian.com/handlechange-react/\r\n    const [formValue, setFormValue] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormValue((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const { email, password } = formValue;\r\n\r\n    const login = (app) => {\r\n        // console.log('hi')\r\n        //message div\r\n\t\tconst message = document.querySelector('#message')\r\n\r\n        // login\r\n        const url = `${API_HOST}/api/users/login`\r\n        // the data we are going to send\r\n        let data = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password\r\n\t\t}\r\n\r\n        // create request constructor\r\n        const request = new Request(url, {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\":\"application/json; charset=UTF-8\",\r\n            }\r\n        })\r\n\r\n        // send the request with fetch\r\n        fetch(request)\r\n        .then(res => {\r\n            if (res.status === 200){\r\n                return res.json();\r\n            }\r\n            else {\r\n                message.innerText = 'Failed: Incorrect login/password.'\r\n                message.setAttribute(\"style\", \"color: red\")\r\n            }\r\n        })\r\n        .then(json => {\r\n            console.log(json.isAdmin)\r\n            if (json.isAdmin){\r\n                // console.log(json.currentEmail)\r\n                navigate(\"/Feed\")\r\n                app.setState({ currentUser: json.currentUser, currentEmail: json.currentEmail })\r\n            } else {\r\n                navigate(\"/Home\")\r\n                // console.log(json.currentEmail)\r\n                app.setState({ currentUser: json.currentUser, currentEmail: json.currentEmail })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\n    const register = () => {\r\n \t\t//message div\r\n\t\tconst message = document.querySelector('#message')\r\n\r\n\t\t// register\r\n\t\tconst url = `${API_HOST}/api/users`\r\n\t\t// the data we are going to send\r\n\t\tlet data = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password\r\n\t\t}\r\n\r\n        // create request constructor\r\n        const request = new Request(url, {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\":\"application/json; charset=UTF-8\",\r\n            }\r\n        })\r\n\r\n        // send the request with fetch\r\n        fetch(request)\r\n        .then(res => {\r\n            if (res.status === 200){\r\n                // registered successfully\r\n                message.innerText = 'Sucess: Account registered.'\r\n                message.setAttribute(\"style\", \"color: green\")\r\n            } else {\r\n                message.innerText = 'Failed: Invalid email/password.'\r\n                message.setAttribute(\"style\", \"color: red\")\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\r\n          <Toolbar>\r\n            <Grid container justify=\"center\" wrap=\"wrap\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\">RECIPIST</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Grid container spacing={0} justify=\"center\" direction=\"row\">\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              spacing={2}\r\n              className=\"login-form\"\r\n            >\r\n              <Paper\r\n                variant=\"elevation\"\r\n                elevation={2}\r\n                className=\"login-background\"\r\n              >\r\n                <Grid item>\r\n                  <Typography component=\"h2\" variant=\"h4\">\r\n                    Welcome to Recipist\r\n                  </Typography>\r\n                  <Typography component=\"h2\" variant=\"h6\">\r\n                    Sign in or Register:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <form>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          placeholder=\"Email\"\r\n                          fullWidth\r\n                          name=\"email\"\r\n                          variant=\"outlined\"\r\n                          onChange={(e) => handleChange(e)}\r\n                          value={email}\r\n                          required\r\n                          autoFocus\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          fullWidth\r\n                          name=\"password\"\r\n                          variant=\"outlined\"\r\n                          value={password}\r\n                          onChange={(e) => handleChange(e)}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          fullWidth\r\n                          onClick={() => login(props.app)}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          fullWidth\r\n                          onClick={() => register()}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <div>\r\n                    \t<p id=\"message\"></p>\r\n                    </div>\r\n                  </form>\r\n                </Grid>\r\n                <Grid item></Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Login extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     const isUser = props.isUser;\r\n//     this.state = { username: \"\", password: \"\", authflag: 1 };\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//     const checkUser =\r\n//       this.state.username == \"user\" && this.state.password == \"user\"\r\n//         ? [true]\r\n//         : [false];\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     this.setState({\r\n//       username: event.state.username,\r\n//       password: event.state.password,\r\n//     });\r\n//   }\r\n//   handleSubmit(event) {\r\n    \r\n//     event.preventDefault();\r\n//     if (this.state.username == \"user\" && this.state.password == \"user\") {\r\n//     } else if (\r\n//       this.state.username == \"admin\" &&\r\n//       this.state.password == \"admin\"\r\n//     ) {\r\n//       return <Link to={\"/Manage\"}></Link>;\r\n//     } else {\r\n//       alert(\"Incorrect Credentials!\");\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n\r\n    // const myUseHookValue = this.props.myUseHookValue;\r\n    \r\n//   }\r\n// }\r\n// export default withHook(Login, useNavigate, 'myUseHookValue');\r\n\r\n// default Login;\r\n\r\n// const renderForm = (\r\n//     <div className=\"form\">\r\n\r\n//       <form onSubmit={handleSubmitUser}>\r\n//         <div className=\"input-container\">\r\n//           <label>Username </label>\r\n//           <input type=\"text\" name=\"uname\" required />\r\n//           {renderErrorMessage(\"uname\")}\r\n//         </div>\r\n//         <div className=\"input-container\">\r\n//           <label>Password </label>\r\n//           <input type=\"password\" name=\"pass\" required />\r\n//           {renderErrorMessage(\"pass\")}\r\n//         </div>\r\n//         <div className=\"button-container\">\r\n//           <input type=\"submit\" value=\"Guest Login\" />\r\n//         </div>\r\n//         <div className=\"button-container\">\r\n//           <input type=\"submit\" value=\"Login\"/>\r\n//         </div>\r\n//         <div className=\"button-container\">\r\n//           <input type=\"submit\" value=\"Signup\"/>\r\n//         </div>\r\n//       </form>\r\n\r\n//     </div>\r\n\r\n//   );","import React, { useState } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent, Link } from '@mui/material';\r\n\r\n\r\nimport Navbar from \"./../../Nav\";\r\n\r\nimport ENV from '../../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst EditName = (props) => {\r\n    const [newName, setNewName] = useState(\"\")\r\n    \r\n    const handleInputChange = (event) => {\r\n        setNewName(event.target.value)\r\n    \r\n    };\r\n\r\n    const edit = () => {\r\n        // message div\r\n        const message = document.querySelector('#message')\r\n\r\n        // check if new name is not empty\r\n        if (!newName){\r\n            message.innerText = 'Failed: Invalid name.'\r\n            message.setAttribute(\"style\", \"color: red\")\r\n            console.log(\"Invalid name\")\r\n            return;\r\n        };\r\n\r\n        const id = props.curr_id\r\n        const url = `${API_HOST}/api/users/${id}/name`\r\n        // the data we are going to send\r\n        let data = {\r\n            name: newName\r\n        }\r\n\r\n        // create request constructor\r\n        const request = new Request(url, {\r\n            method: 'put',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\":\"application/json; charset=UTF-8\",\r\n            }\r\n        });\r\n            \r\n        // send the request with fetch\r\n        fetch(request)\r\n        .then(res => {\r\n            // name was changed successfully\r\n            if (res.status === 200){\r\n                message.innerText = 'Success: Name was changed.'\r\n                message.setAttribute(\"style\", \"color: green\")\r\n                console.log(res)\r\n            } else {\r\n                message.innerText = 'Failed: Server error.'\r\n                message.setAttribute(\"style\", \"color: red\")\r\n            }\r\n        \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        }) \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Navbar mod={false} colour={\"primary\"} />\r\n        </div>\r\n\r\n        <Card \r\n          style={{ maxWidth: 450, margin: \"0 auto\", padding: \"20px 5px\" }}\r\n        >\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              Edit Name\r\n            </Typography>\r\n            <form>\r\n              <Grid container spacing={1}>\r\n                <Grid xs={12} item>\r\n                  <TextField\r\n                    required\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"newName\"\r\n                    value={newName}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid xs={12} item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={() =>edit()}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n                <div >\r\n                    <p id='message'></p>\r\n                </div>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EditName;","import React, { useState } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Card, CardContent } from '@mui/material';\r\n\r\nimport Navbar from \"./../../Nav\";\r\n\r\nimport ENV from '../../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst EditEmail = (props) => {\r\n    const [newEmail, setNewEmail] = useState(\"\")\r\n\r\n    const handleInputChange = (event) => {\r\n        setNewEmail(event.target.value)\r\n    }\r\n\r\n    const edit = () => {\r\n        // message div\r\n        const message = document.querySelector('#message')\r\n\r\n        // check if new email is not empty\r\n        if (!newEmail){\r\n            message.innerText = 'Failed: Invalid email.'\r\n            message.setAttribute(\"style\", \"color: red\")\r\n            console.log(\"Invalid email\")\r\n            return;\r\n        }\r\n\r\n        // CHANGE THIS: TO GET USER ID FROM LOGGED IN INFO\r\n        const id = props.curr_id\r\n        const url = `${API_HOST}/api/users/${id}/email`\r\n        // the data we are going to send\r\n        let data = {\r\n            email: newEmail\r\n        }\r\n\r\n        // create request constructor\r\n        const request = new Request(url, {\r\n            method: 'put',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-type\":\"application/json; charset=UTF-8\",\r\n            }\r\n        });\r\n\r\n        // send the request with fetch\r\n        fetch(request)\r\n        .then(res => {\r\n            if (res.status === 200){\r\n                // email was changed successfully\r\n                message.innerText = 'Success: Email was changed.'\r\n                message.setAttribute(\"style\", \"color: green\")\r\n                console.log(res)\r\n            } else {\r\n                message.innerText = 'Failed: Server error.'\r\n                message.setAttribute(\"style\", \"color: red\")\r\n            }\r\n\r\n    \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        }) \r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Navbar mod={false} colour={\"primary\"} />\r\n        </div>\r\n        <Card style={{ maxWidth: 450, margin: \"0 auto\", padding: \"20px 5px\" }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              Edit Email\r\n            </Typography>\r\n            <form>\r\n              <Grid container spacing={1}>\r\n                <Grid xs={12} item>\r\n                  <TextField\r\n                    required\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"newEmail\"\r\n                    value={newEmail}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid xs={12} item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={() => edit()}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n                <div>\r\n                  <p id=\"message\"></p>\r\n                </div>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EditEmail;","import React, { Component } from 'react'\r\nimport { Form, Button, DropdownButton, Dropdown, Card, ListGroup} from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst printf = console.log\r\nexport default class Step1 extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Step 1</h1>\r\n          <Form>\r\n            <Form.Group className=\"amb-3\">\r\n              <Form.Label>Dish Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Dish Name\" onChange={(e) =>{this.props.updateName(e.target.value)}}  />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"amb-3\">\r\n              <Form.Label>Serving size</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Serving size\" onChange={(e) => {this.props.updateServingSize(e.target.value)}}/>\r\n            </Form.Group>\r\n            \r\n          </Form>\r\n          \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, DropdownButton, Dropdown, Card, ListGroup} from \"react-bootstrap\";\r\n\r\n\r\nconst printf = console.log\r\nexport default class Step1 extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      ingredient: this.props.ingredient_list\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <h1>Step 2</h1>\r\n        <Form >\r\n          <Form.Group  >\r\n          <Form.Label>New Ingredient</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Ingredient\"  onChange = {(e) => {this.props.updateCurrentIngredient(e.target.value)}}/>\r\n          <Form.Label>Amount</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Amount\" onChange={(e) => {this.props.updateCurrentAmount(e.target.value)}  }/>\r\n          <Form.Control type=\"text\" placeholder=\"Unit\"  onChange={(e) => {this.props.updateCurrentUnit(e.target.value)}  }/>\r\n          <Button onClick={this.props.addIngredient} >Add</Button>\r\n          </Form.Group>\r\n        </Form>\r\n        \r\n\r\n\r\n        <ul>\r\n            {\r\n              this.state.ingredient.map((ingredient, index) => {\r\n                return (\r\n                  <li key = {Math.random()}>\r\n                    <Card style={{ width: '18rem' }}>\r\n                      <Card.Header># {index + 1}</Card.Header>\r\n                      <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>{ingredient.name}</ListGroup.Item>\r\n                        <ListGroup.Item>{ingredient.amount} {ingredient.unit}</ListGroup.Item>\r\n                        <Button onClick={() => {this.props.deleteIngredient(ingredient)}}>x</Button>\r\n                      </ListGroup>\r\n                    </Card>\r\n                  </li>\r\n                )\r\n\r\n              })\r\n            }\r\n        </ul>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, DropdownButton, Dropdown, Card, ListGroup} from \"react-bootstrap\";\r\n\r\n\r\nconst printf = console.log\r\nexport default class Steps extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n          steps: this.props.steps\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    return (\r\n        <div>\r\n          <h1>Step 3</h1>\r\n            <Form >\r\n            <Form.Group  >\r\n            <Form.Label>Add New Step</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"New Step\"  onChange={this.props.updateStep}/>\r\n            <Button onClick={this.props.addStep} >Add</Button>\r\n            </Form.Group>\r\n\r\n\r\n            </Form>\r\n            <ul>\r\n                {\r\n                    this.state.steps.map((step, index) =>{\r\n                        return (\r\n                            <li key = {step}>\r\n\r\n\r\n                              <Card style={{ width: '46rem' }}>\r\n                                <Card.Header>Step {index + 1}</Card.Header>\r\n                                <ListGroup>\r\n                                  <ListGroup.Item>{step}</ListGroup.Item>\r\n                                  <Button onClick={() => {this.props.deleteStep(step)}} >Delete</Button>\r\n                                </ListGroup>\r\n                              </Card>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, DropdownButton, Dropdown, Card, ListGroup} from \"react-bootstrap\";\r\n\r\nexport default class Step4 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Step 4</h1>\r\n        <Form>\r\n          <Form.Group >\r\n            <Form.Label>Cooking tips</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} onChange = {(e) => {this.props.updateTips(e.target.value)}} />\r\n          </Form.Group>\r\n        </Form>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// FROM POSTED EXAMPLE \r\n\r\n// environment configutations\r\nimport ENV from './../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\n// A function to send a POST request with a new image \r\nexport const addImage = (form, updateImageId) => {\r\n    // the URL for the request\r\n    //console.log(form)\r\n    const url = `${API_HOST}/images`;\r\n\r\n    // The data we are going to send in our request\r\n    const imageData = new FormData(form);\r\n    //console.log(imageData)\r\n\r\n    // Create our request constructor with all the parameters we need\r\n    const request = new Request(url, {\r\n        method: \"post\",\r\n        body: imageData,\r\n    });\r\n\r\n    // Send the request with fetch()\r\n    fetch(request)\r\n        .then(function (res) {\r\n            // Handle response we get from the API.\r\n            // Usually check the error codes to see what happened.\r\n            if (res.status === 200) {\r\n                // If image was added successfully, tell the user.\r\n                alert(\"Image uploaded succesfully, submit recipe now!\")\r\n                return res.json();\r\n\r\n            } else {\r\n                // If server couldn't add the image, tell the user.\r\n                // Here we are adding a generic message, but you could be more specific in your app.\r\n                alert(\"Error uploading image\")\r\n            }\r\n        })\r\n        .then(json => {\r\n            //console.log(json.image_id)\r\n            updateImageId(json.image_id)\r\n            //image.setState({image: json.image_id})\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\n// A function to send a GET request to the web server,\r\n// and then loop through them and add a list element for each image\r\n// export const getImage = (imageId) => {\r\n//     // the URL for the request\r\n//     const url = `${API_HOST}/images/${imageId}`;\r\n\r\n//     // Since this is a GET request, simply call fetch on the URL\r\n//     fetch(url)\r\n//         .then(res => {\r\n//             if (res.status === 200) {\r\n//                 // return a promise that resolves with the JSON body\r\n//                 return res.json();\r\n//             } else {\r\n//                 alert(\"Could not get images\");\r\n//             }\r\n//         })\r\n//         .then(json => {\r\n//             // the resolved promise with the JSON body\r\n//             imageListComp.setState({ imageList: json.images });\r\n//         })\r\n//         .catch(error => {\r\n//             console.log(error);\r\n//         });\r\n// };\r\n","import React,{Component} from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { addImage } from '../../actions/images';\r\n\r\nconst printf = console.log\r\nclass Step5 extends Component {\r\n  \r\n    state = {\r\n      image: null\r\n    };\r\n\r\n    onFileChange = event => {\r\n\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n    \r\n    };\r\n    \r\n\r\n    onFileUpload = () => {\r\n    \r\n\r\n      const formData = new FormData();\r\n    \r\n      formData.append(\r\n        \"myFile\",\r\n        this.state.selectedFile,\r\n        this.state.selectedFile.name\r\n      );\r\n      printf(this.state.selectedFile);\r\n    };\r\n    \r\n    fileData = () => {\r\n     \r\n      if (this.state.selectedFile) {\r\n         \r\n        return (\r\n          <div>\r\n             <br></br>\r\n            <h3>Upload successfully!</h3>\r\n             \r\n<p>File Name: {this.state.selectedFile.name}</p>\r\n \r\n             \r\n \r\n             \r\n<p>\r\n              Last Modified:{\" \"}\r\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n            </p>\r\n \r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <br />\r\n            <h4>Upload Image!</h4>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    \r\n    render() {\r\n    \r\n      return (\r\n        <div>\r\n            <h1>\r\n              Step5\r\n            </h1>\r\n\r\n            \r\n            <form className=\"image-form\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addImage(e.target, this.props.updateImageId);\r\n                }}>\r\n                    <div className=\"image-form__field\">\r\n                        <label>Image:</label>\r\n                        <input name=\"image\" type=\"file\" />\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </form>\r\n          {this.fileData()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\n  export default Step5;","import React, { Component } from 'react'\r\nimport Step1 from './Step1'\r\nimport Step2 from './Step2'\r\nimport Step3 from './Step3'\r\nimport Step4 from './Step4'\r\nimport Step5 from './Step5'\r\nimport {Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './UploadRecipe.css'\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { addRecipe } from '../../actions/recipes'\r\nconst printf = console.log\r\n\r\n\r\nexport default class UploadRecipe extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            step: 1,\r\n            show: true,\r\n            dish_name: null,\r\n            serving_size: null,\r\n            current_ingredient: null,\r\n            current_amount: null,\r\n            current_unit: null,\r\n            ingredient:[],\r\n            cooking_steps:[],\r\n            tips:null,\r\n            current_step: \"\",\r\n            steps: [],\r\n            image_id: \"\"\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    returnIngredient = () =>{\r\n      return this.state.ingredient\r\n    }\r\n    updateName = (name) =>{\r\n      this.setState({dish_name: name});\r\n    }\r\n    updateServingSize = (size) =>{\r\n      this.setState({serving_size: size});\r\n    }\r\n    updateCurrentIngredient = (ingredient)=>{\r\n      this.setState({current_ingredient: ingredient})\r\n      printf(ingredient)\r\n    }\r\n    updateCurrentAmount = (amount)=>{\r\n      this.setState({current_amount: amount})\r\n      printf(amount)\r\n    }\r\n    updateCurrentUnit = (unit) =>{\r\n      this.setState({current_unit: unit})\r\n    }\r\n    \r\n    updateImageId = (img_id) =>{\r\n      this.setState({image_id: img_id})\r\n    }\r\n\r\n    addIngredient = ()=>{\r\n      printf(this.state.current_amount);\r\n      if(this.state.current_ingrident === null || this.state.current_amount === null){\r\n        alert(\"Please type in valid ingredient/amount\")\r\n        return;\r\n      }\r\n      else{\r\n        if(this.state.ingredient.length !== 0){\r\n          for(let i = 0; i < this.state.ingredient.length; i++){\r\n            if(this.state.ingredient[i] === this.state.current_ingredient){\r\n              alert(\"You have already added this ingredient\");\r\n              return;\r\n            }\r\n          }\r\n        }\r\n  \r\n        let new_ingredient = this.state.ingredient;\r\n        new_ingredient.push({\r\n          name: this.state.current_ingredient, \r\n          amount: this.state.current_amount, \r\n          unit: this.state.current_unit});\r\n  \r\n        this.setState({\r\n          ingredient: new_ingredient\r\n        })\r\n  \r\n      }\r\n      printf(this.state.ingredient)\r\n    }\r\n\r\n    // openAddBoardModal() {\r\n    //   this.setState({ boardAddModalShow: true }, function () {\r\n    //     console.log(this.state.boardAddModalShow);\r\n    //   });\r\n    // }\r\n    \r\n\r\n    deleteIngredient = (ingredient) => {\r\n      printf(\"before: \")\r\n      printf(this.state.ingredient)\r\n      printf(ingredient)\r\n      //I have no idea why this filter function is not working\r\n      let new_ingredient = this.state.ingredient.filter(\r\n        item => item !== ingredient\r\n        \r\n      )\r\n      this.setState({ingredient: new_ingredient}\r\n        \r\n        )\r\n\r\n      printf(\"after\")\r\n      printf(this.state.ingredient)\r\n    }\r\n\r\n\r\n\r\n\r\n    updateTips = (tips)=>{\r\n      this.setState({\r\n        tips: tips\r\n      })\r\n    }\r\n\r\n    submitRecipe = (creator_id, creator_email)=>{\r\n      console.log(creator_id)\r\n      let recipe = {\r\n        creator: creator_id,\r\n        creator_name: creator_email,\r\n        dish_name: this.state.dish_name,\r\n        serving_size: this.state.serving_size,\r\n        ingredient: this.state.ingredient,\r\n        cooking_steps: this.state.steps,\r\n        tips: this.state.tips,\r\n        image_id: this.state.image_id\r\n\r\n      }\r\n      printf(recipe)\r\n      addRecipe(recipe)\r\n      return recipe\r\n    }\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    updateStep = (event) =>{\r\n        \r\n      this.setState({\r\n          current_step: event.target.value\r\n      })\r\n  \r\n\r\n    }\r\n\r\n    addStep = () =>{\r\n        let need_add = this.state.current_step\r\n        let new_steps = this.state.steps\r\n        if (new_steps.includes(need_add)){\r\n            //step already added\r\n            alert(\"You can't add two same steps\")\r\n        }\r\n        else if(need_add === ''){\r\n            alert(\"Please enter a cooking step\")\r\n        }\r\n        else{\r\n            new_steps.push(need_add);\r\n            this.setState({\r\n            steps: new_steps\r\n        })\r\n        }\r\n    }\r\n\r\n    deleteStep = (step) =>{\r\n        let new_steps = this.state.steps.filter((s) =>{\r\n            return s !== step\r\n        })\r\n        this.setState({\r\n            steps: new_steps\r\n        })\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    const { curr_id, curr_email } = this.props;\r\n    //console.log(curr_id)\r\n\r\n    if(this.state.show === true){\r\n        if(this.state.step === 1){\r\n          return(\r\n            <div className = \"step_container\">\r\n              <Step1 \r\n              updateName = {this.updateName} \r\n              updateServingSize = {this.updateServingSize} ></Step1>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step + 1   })}>Next &raquo;</Button>\r\n            </div>\r\n          )\r\n        }\r\n        if(this.state.step === 2){\r\n          \r\n\r\n\r\n          return(\r\n            <div className = \"step_container\" >\r\n              <Step2 \r\n              updateCurrentIngredient = {this.updateCurrentIngredient}\r\n              updateCurrentAmount = {this.updateCurrentAmount}\r\n              updateCurrentUnit ={this.updateCurrentUnit}\r\n              addIngredient = {this.addIngredient}\r\n              ingredient_list = {this.state.ingredient}\r\n              deleteIngredient = {this.deleteIngredient}\r\n              ></Step2>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step - 1   })}>&laquo; Previous</Button>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step + 1   })}>Next &raquo;</Button>\r\n            </div>\r\n          )\r\n        }\r\n        if(this.state.step === 3){\r\n          return(\r\n            <div className = \"step_container\">\r\n              <Step3\r\n              updateStep = {this.updateStep}\r\n              addStep = {this.addStep}\r\n              deleteStep = {this.deleteStep}\r\n              steps = {this.state.steps}\r\n              ></Step3>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step - 1   })}>&laquo; Previous</Button>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step + 1   })}>Next &raquo;</Button>\r\n            </div>\r\n          )\r\n        }\r\n        if(this.state.step === 4){\r\n          return(\r\n            <div className = \"step_container\">\r\n              <Step4\r\n              updateTips = {this.updateTips}\r\n              ></Step4>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step - 1   })}> &laquo; Previous</Button>\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step + 1   })}>Next &raquo;</Button>\r\n\r\n            </div>\r\n          )\r\n        }\r\n\r\n        if(this.state.step === 5){\r\n          return(\r\n            <div className = \"step_container\">\r\n              <Step5 \r\n              updateImageId = {this.updateImageId}\r\n              />\r\n              <Button className='previous_next_button' onClick={() => this.setState({step: this.state.step - 1   })}> &laquo; Previous</Button>\r\n              <Button className='previous_next_button' onClick={() => this.submitRecipe(curr_id, curr_email)}>Submit</Button>\r\n\r\n              <Link to={`/Home`}>\r\n                    <Button className='previous_next_button'>\r\n                        Back to Main\r\n                    </Button>\r\n                    \r\n                </Link>\r\n            </div>\r\n          )\r\n        }\r\n\r\n    }\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Navbar from \"./../Nav\";\r\nimport RecipeCard from \"./../RecipeCard\";\r\n\r\nimport ENV from '../../config.js'\r\nconst API_HOST = ENV.api_host\r\n\r\nconst useStyles = makeStyles({\r\n    recipesContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"55px\",\r\n        paddingRight: \"55px\",\r\n    },\r\n\r\n    header: {\r\n        textAlign: \"center\",\r\n        alignSelf: \"center\"\r\n    }\r\n})\r\n\r\nconst SavedRecipes = (props) => {\r\n    console.log(props.isAdmin)\r\n    const classes = useStyles()\r\n    const [recipesData, setRecipesData] = useState([])\r\n\r\n    // CHANGE THIS: TO GET USER ID FROM LOGGED IN INFO\r\n    // const id = '6248bf22501695b27cd4783c'\r\n    // console.log(props.curr_id)\r\n    const curr_id = props.curr_id\r\n    const nav_color = props.isAdmin? \"secondary\" : \"primary\"\r\n\r\n    useEffect(() => {\r\n        // get saved recipes from current session user\r\n        fetch(`${API_HOST}/api/recipes`)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                // return a promise that resolves with the JSON body\r\n                return res.json();\r\n            } else {\r\n                alert(\"Could not get recipes\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            // console.log(data)\r\n            // get saved recipes of this user\r\n            const saved_recipes = []\r\n            for (let i = 0; i < data.length; i++){\r\n                // console.log(data[i])\r\n                let curr_recipe = data[i]\r\n\r\n                // console.log(curr_recipe)\r\n                // console.log(curr_recipe.saved_by)\r\n                // console.log(props.curr_id)\r\n\r\n                // console.log(curr_recipe.saved_by.includes(props.curr_id))\r\n                \r\n                if (curr_recipe.saved_by.includes(curr_id)){\r\n                    saved_recipes.push(curr_recipe)\r\n                }\r\n            }\r\n            console.log(saved_recipes)\r\n            \r\n            setRecipesData(saved_recipes)\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    \r\n    }, [])\r\n\r\n    const getRecipeCard = (recipe) => {\r\n        console.log(recipe)\r\n        return (\r\n            <Grid item md={6} lg={6} key={recipe.id}>\r\n                <RecipeCard key={Math.random()} recipeProp={recipe}></RecipeCard>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar mod={props.isAdmin} colour={nav_color} />\r\n        <div>\r\n        <div className={classes.header}>\r\n            <h2>Saved Recipes</h2>\r\n        </div>\r\n        {/* <Card style={{ maxWidth: 300, margin: \"0 auto\", padding: \"5px 5px\" }}>\r\n            <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                Saved Recipes\r\n            </Typography>\r\n            </CardContent>\r\n        </Card> */}\r\n          <Container sx={{ py: 8 }} maxWidth=\"lg\">\r\n            <Grid container spacing={4} className={classes.recipesContainer}>\r\n              {recipesData.map((recipe) => getRecipeCard(recipe))}\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SavedRecipes;","/* New cleaned up version of App.js */\r\nimport React from 'react';\r\n\r\n// Importing react-router-dom to use the React Router\r\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport RegisterUser from './react-components/RegisterUser';\r\nimport ViewRecipe from './react-components/ViewRecipe';\r\n\r\nimport Navbar from './react-components/Nav';\r\nimport UserView from './react-components/UserView';\r\nimport UserProfile from './react-components/UserProfile';\r\nimport EditProfile from './react-components/EditProfile';\r\nimport ModView from './react-components/ModView'\r\nimport ModManage from './react-components/ModManage'\r\nimport ResponsiveAppBar from './react-components/Nav';\r\nimport GuestView from './react-components/GuestView';\r\nimport LoginCard from './react-components/LoginCard';\r\nimport EditName from './react-components/EditProfile/EditName';\r\nimport EditEmail from './react-components/EditProfile/EditEmail';\r\nimport UserAnnouncements from './react-components/UserAnnouncements';\r\nimport UploadRecipe from './react-components/AddRecipe';\r\nimport SavedRecipes from './react-components/SavedRecipes'\r\nclass App extends React.Component {\r\n\r\n  // a 'global' state that you can pass through to any child componenets of App.\r\n  //   In the Routes below they are passed to both the Home and Queue states.\r\n  state = {\r\n    currentUser: null,\r\n    currentEmail: null,\r\n    isMod: null\r\n  }\r\n\r\n  render() {\r\n      const {currentUser, currentEmail, isMod } = this.state\r\n      console.log(currentEmail)\r\n      console.log(isMod)\r\n    return (\r\n        // <div>\r\n        // <BrowserRouter>\r\n        //   <Routes> { /* Similar to a switch statement - shows the component depending on the URL path */ }\r\n        //     { /* Each Route below shows a different component depending on the exact path in the URL  */ }\r\n        //     <Route exact path='/' element={<UserView />}/>\r\n\r\n        //     <Route exact path='/user' element={<UserProfile />}/>\r\n\r\n        //     <Route exact path='/edit' element={<EditProfile />}/>\r\n            \r\n        //   </Routes>\r\n        // </BrowserRouter>\r\n      <div>\r\n        <Routes> { /* Similar to a switch statement - shows the component depending on the URL path */}\r\n          { /* Each Route below shows a different component depending on the exact path in the URL  */}\r\n          <Route path='/Home' element={<UserView announce={false} curr_id={currentUser}/>} />\r\n          <Route path='/Announcements' element={<UserView announce={true}/>} />\r\n          <Route path=\"/Feed\" element={<ModView announce={false}/>}/>\r\n          <Route path=\"/Manage\" element={<ModManage/>}/>\r\n          <Route path=\"/Announce\" element={<ModView announce={true}/>}/>\r\n          <Route path='/GuestHome' element={<GuestView/>} />\r\n          <Route path='/' element={<LoginCard app={this}/>} />\r\n          <Route path=\"/Profile\" element={<UserProfile curr_id={currentUser}/>}/>\r\n          <Route path=\"/EditProfile\" element={<EditProfile/>}/>\r\n          <Route path=\"/recipe/:id\" element={<ViewRecipe/>}/>\r\n\r\n          <Route path=\"/Upload\" element={<UploadRecipe curr_id={currentUser} curr_email={currentEmail}/>}/>\r\n          <Route path=\"/EditProfile\" element={<EditProfile/>}/>\r\n          <Route path=\"/EditName\" element={<EditName curr_id={currentUser}/>}/>\r\n          <Route path=\"/EditEmail\" element={<EditEmail curr_id={currentUser}/>}/>\r\n          <Route path=\"/Saved\" element={<SavedRecipes isAdmin={isMod} curr_id={currentUser}/>}/>\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport SearchContextProvider from \"./context/search_context\"; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <SearchContextProvider>\r\n        <App />\r\n      </SearchContextProvider>\r\n    </BrowserRouter>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}